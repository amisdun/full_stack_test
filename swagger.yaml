swagger: "2.0"

############################################################################
#                          Client  API Information                         #
############################################################################
info:
  version: "v1"
  title: REST API for 'The Clients Management App'
  contact: 
      name: "Abdul-Malik Musah"
      email: "musah.abdulmalikgh@gmail.com" 
  description: |
    This is a simple CRUD API application made with Express and documented with Swagger. 
host: localhost:8000
basePath: /api

paths:
  /clients:
      get:
        tags: [Clients]
        summary: "Returns all clients"
        produces:
          - "application/json"
        responses:
          "200":
            description: "Success response"
          "405":
            description: "Invalid input"

      post:
        tags: [Clients]
        summary: "Add a new client to the database"
        consumes:
          - "application/json"
        produces:
          - "application/json"
        parameters:
          - in: "body"
            name: "clients"
            description: "Client object that needs to be added to the store"
            # schema:
            #   $ref: "#/definitions/clients"
        responses:
          "400":
            description: "Bad request"
          "201":
            description: "Success response"
          "405":
            description: "Invalid input"
          "409":
            description: "Client already exists"

  /clients/{id}: 
      patch:
        tags: 
        - "Clients"
        summary: "Edit client"
        description: "Update a single client by passing mongoose objectID"
        consumes:
        - application/json
        produces:
        - application/json
        parameters:
        - name: "id"
          in: "path"
          description: "Mongoose objectID that need to pass in"
          required: true
        - in: body
          name: clients
          description: "Client object that needs to be updated"
          schema:
              $ref: "#/definitions/clients"
        responses:
          "200":
            description: "successful operation"
          "400":
            description: "Bad request"
          "404":
            description: "id not found"
      
      get:
        tags:
        - "Clients"
        summary: "Return single client"
        description: "Get a single client by ID" 
        produces:
        - "application/json"
        parameters:
        - name: "id"
          in: "path"
          description: "ID of the client you want to retrieve"
          required: true
        responses:
          "200":
            description: "Success operation"
          "400":
            description: "Invalid ID supplied"
          "404":
            description: "client not found"

      delete:
        tags:
        - "Clients"
        summary: "Delete client by ID"
        description: "For valid response try mongoose Schema ObjectIDs. IDs with positive integer value will return error." 
        produces:
        - "application/json"
        parameters:
        - name: "id"
          in: "path"
          description: "ID of the client that you want to be delete"
          required: true
        responses:
          "200":
            description: "Success operation"
          "400":
            description: "Invalid ID supplied"
          "404":
            description: "client not found"

  # providers
  /providers:
      get:
        tags: [Providers]
        summary: "Returns all providers"
        produces:
          - "application/json"
        responses:
          "200":
            description: "Success response"
          "405":
            description: "Invalid input"

      post:
        tags: [Providers]
        summary: "Add a new provider to the database"
        consumes:
          - "application/json"
        produces:
          - "application/json"
        parameters:
          - in: "body"
            name: "index"
            description: "Provider object that needs to be added to the store"
            schema:
              $ref: "#/definitions/providers"
        responses:
          "400":
            description: "Bad request"
          "200":
            description: "Success response"
          "405":
            description: "Invalid input"
          "409":
            description: "Provider already exists"
      
  /providers/{id}: 
    patch:
      tags: 
      - "Providers"
      summary: "Edit Provider"
      description: "Update a single provider by passing mongoose objectID"
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: "id"
        in: "path"
        description: "Mongoose objectID that need to pass in"
        required: true
      - in: body
        name: provider
        description: "Provier object that needs to be updated"
        schema:
            $ref: "#/definitions/providers"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Bad request"
        "404":
          description: "id not found"
      
    get:
      tags:
      - "Providers"
      summary: "Return a single provider"
      description: "Get single provider by ID" 
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the povider you want to retrieve"
        required: true
      responses:
        "200":
          description: "Success operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Provider not found"

    delete:
      tags:
      - "Providers"
      summary: "Delete provider by ID"
      description: "For valid response try mongoose Schema ObjectIDs. IDs with positive integer value will return error." 
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the provider that you want to be delete"
        required: true
      responses:
        "200":
          description: "Success operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Provider not found"
            


############################################################################
#                               Definitions                                #
############################################################################
definitions:
  clients:
    type: object
    required:
      - "name"
      - "email"
      - "phone"
    properties:
      name:
        type: string
      email:
        type: string
      phone:
        type: string
      providers:
        type: array
        items:
          type: string


             
  
  providers:
    type: object
    required:
      - "id"
      - "name"
    properties:
      id:
        type: string
      name:
        type: string
           
